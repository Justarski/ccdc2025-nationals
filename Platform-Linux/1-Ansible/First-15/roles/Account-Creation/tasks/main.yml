##
# Usage: Generate New User and Group, add user to new group as well as one of sudo or wheel, and give sudo to new group.
#
# The goal of this script is to create a new group and user account. The account will have an authorized key
# file setup and password.
#
# Initially written by a Tired Matthew Harper
# Based on: Files in the OLD directory
#
# NOTE: The Password must be hashed. We can generate a password with the `mkpasswd` command from the `whois` package
##

---
- name: Backup Passwd and Group Files
  ansible.builtin.copy:
    remote_src: true
    src: /etc/{{ item }}
    dest: /etc/{{ item }}.bak
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  with_items:
    - passwd
    - group

- name: Backup Shadow File
  ansible.builtin.copy:
    remote_src: true
    src: /etc/shadow
    dest: /etc/shadow.bak
    owner: root
    group: root
    mode: u=rw,g=r

- name: Create Group
  ansible.builtin.group:
    name: "{{ group }}"
    state: present

- name: Add Sudoer File
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%{{ group }}'
    line: '%{{ group }} ALL=(ALL) NOPASSWD: ALL' # NOPASSWD is risky
    validate: '/usr/sbin/visudo -cf %s'
  become: true

- name: Check if sudo group exists
  command: getent group sudo
  register: sudo_group_result
  ignore_errors: true

- name: Check if wheel group exists
  command: getent group wheel
  register: wheel_group_result
  ignore_errors: true

- name: Determine target group (sudo)
  set_fact:
    target_group: "{{ 'sudo' }}"
  when: sudo_group_result.rc == 0

- name: Determine target group (wheel)
  set_fact:
    target_group: "{{ 'wheel' }}"
  when: wheel_group_result.rc == 0 and sudo_group_result.rc != 0

- name: Determine target group (None)
  set_fact:
    target_group: "{{ 'none' }}"
  when: wheel_group_result.rc != 0 and sudo_group_result.rc != 0

- name: Fail if no target group found
  fail:
    msg: "Neither sudo nor wheel group exists."
  when: target_group == "none"

- name: Create User Accounts
  ansible.builtin.user:
    name: "{{ item }}"
    password: "{{ passwd }}"
    create_home: yes
    groups:
      - "{{ group }}"
      - "{{ target_group }}"
    shell: /bin/bash
  loop: "{{ new_users }}"

- name: Create SSH Directory
  ansible.builtin.file:
    path: /home/{{ item }}/.ssh
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: u=rwx,g=,o=
  loop: "{{ new_users }}"

- name: Copy Authorized Keys
  ansible.builtin.copy:
    remote_src: false
    src: "{{ key_path }}"
    dest: /home/{{ item }}/.ssh/authorized_keys
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: u=rw,g=,o=
  loop: "{{ new_users }}"